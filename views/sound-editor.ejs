<%- include('shared/head'); -%>
<%- include('shared/header'); -%>
  <div id="menu-bar">
    <!--TODO Implement [File, Edit, View, Settings, Help]-->
    <button id="tl-add-layer">Add Layer</button>

    <form id="search-bar">
      <input type="text" placeholder="Search Sounds">
      <button type="submit"></i></button>
    </form>

  </div>
  <main>
    <section>

      <h2>Sounds</h2>
      <div id="sound-list">
        <span class="error-msg"></span>
      </div>

    </section>

    <div id="timeline">
      <div id="layers"></div>
    </div>
  </main>
  <script type="text/javascript" src="sound-elements.js"></script>
  <script>

const baseUrl = 'http://localhost:5163'

const soundList = document.getElementById('sound-list')
const search = document.getElementById('search-bar')

const timeline = document.getElementById('timeline')
const tlAddLayer = document.getElementById('tl-add-layer')

const searchSound = async function (text) {
  const url = new URL('/sound-editor/search', baseUrl)
  const res = await fetch(url, {
    method: 'POST',
    body: JSON.stringify({ textSearch: text }),
    headers: { 'Content-Type': 'application/json' }
  })

  const result = await res.json()

  if (result.soundResults === undefined) {
    msg.innerHTML = 'Error: A problem occured searching sounds'
  }
  
  displaySounds(result.soundResults)
}

const displaySounds = function (soundResults) {
  for (const child of soundList.querySelectorAll('div.sound-sample')) {
    child.remove()
  }
  for (const sound of soundResults.results) {
    const element = Schematic.soundSample({
      id: sound.id,
      name: sound.name
    })
    soundList.appendChild(element)

    element.addEventListener('click', async (e) => {
      console.log(`DEBUG: Add ${element.id} to timeline`)
      const url = new URL('/sound-editor/sample/addToLayer', baseUrl)

      const res = await fetch(url, {
        method: 'POST',
        body: JSON.stringify({ 
          layerId: 0,
          sampleId: element.id
        }),
        headers: { 'Content-Type': 'application/json' }
      })

      const result = await res.json()
      console.log(result.success)
    })
  }
}

window.addEventListener('load', async (e) => {
  const url = new URL('/sound-editor/load/0', baseUrl)
  const res = await fetch(url, {
    method: 'POST'
  })

  const result = await res.json()
  for (const layer of result.layers) {
    document.getElementById('layers').appendChild(Schematic.layer(layer))
  }
})
document.addEventListener('layerAdd', async (e) => {
  const url = new URL(`/sound-editor/layer/add`, baseUrl)
  const res = await fetch(url, {
    method: 'POST',
  })

  const result = await res.json()

  const layer = result.addedLayer

  document.getElementById('layers').appendChild(Schematic.layer(layer))
})

tlAddLayer.addEventListener('click', (e) => document.dispatchEvent(new Event('layerAdd')))

search.addEventListener('submit', (e) => {
  e.preventDefault()
  const text = search.querySelector('input').value
  searchSound(text)
}, false)
  </script>
<%- include('shared/footer'); -%>
